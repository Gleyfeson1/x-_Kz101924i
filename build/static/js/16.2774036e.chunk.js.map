{"version":3,"sources":["App/components/UcFirst.js","../node_modules/react-bootstrap/esm/Badge.js","Demo/UIElements/Basic/Badges.js","App/components/MainCard.js"],"names":["UcFirst","string","this","props","text","charAt","toUpperCase","slice","React","Component","_excluded","Badge","forwardRef","_ref","ref","bsPrefix","variant","pill","className","_ref$as","as","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","Badges","buttonBadges","map","idx","Button","key","Row","Col","title","MainCard","state","isOption","fullCard","collapseCard","loadCard","cardRemove","cardReloadHandler","setState","setInterval","cardRemoveHandler","fullScreenStyle","loader","cardHeaderRight","cardHeader","card","cardClass","alignRight","Toggle","id","Menu","Item","onClick","prevState","href","DEMO","BLANK_LINK","Header","Title","position","top","left","right","width","windowWidth","height","windowHeight","join","style","in","Body","children","windowSize"],"mappings":"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","file":"static/js/16.2774036e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass UcFirst extends React.Component {\r\n    render() {\r\n        const string = this.props.text;\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n}\r\n\r\nexport default UcFirst;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"pill\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  pill: false\n};\nvar Badge = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      pill = _ref.pill,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'span' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, pill && prefix + \"-pill\", variant && prefix + \"-\" + variant)\n  }));\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React, {Component} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Badge,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Card from \"../../../App/components/MainCard\";\r\nimport UcFirst from \"../../../App/components/UcFirst\";\r\n\r\nclass Badges extends Component {\r\n    render() {\r\n        const buttonVariants = [\r\n            'primary',\r\n            'secondary',\r\n            'success',\r\n            'danger',\r\n            'warning',\r\n            'info',\r\n            'light',\r\n            'dark',\r\n        ];\r\n\r\n        const buttonBadges = buttonVariants.map((variant, idx) => (\r\n            <Button key={idx} variant={variant}>\r\n                <UcFirst text={variant} />\r\n                <Badge variant=\"light\" className=\"ml-1\">4</Badge>\r\n            </Button>\r\n        ));\r\n\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title=\"Basic Badges\">\r\n                            <h1>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h1>\r\n                            <h2>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h2>\r\n                            <h3>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h3>\r\n                            <h4>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h4>\r\n                            <h5>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h5>\r\n                            <h6>\r\n                                Example heading <Badge variant=\"secondary\">New</Badge>\r\n                            </h6>\r\n                        </Card>\r\n                        <Card title=\"Button Badges\">\r\n                            {buttonBadges}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Badges;","import React, {Component} from 'react';\r\nimport {Dropdown, Card, Collapse} from 'react-bootstrap';\r\nimport windowSize from 'react-window-size';\r\n\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nclass MainCard extends Component {\r\n    state = {\r\n        isOption: this.props.isOption,\r\n        fullCard: false,\r\n        collapseCard: false,\r\n        loadCard: false,\r\n        cardRemove: false\r\n    };\r\n\r\n    cardReloadHandler = () => {\r\n        this.setState({loadCard: true});\r\n        setInterval(() => {\r\n            this.setState({loadCard: false});\r\n        }, 3000);\r\n    };\r\n\r\n    cardRemoveHandler = () => {\r\n        this.setState({cardRemove: true});\r\n    };\r\n\r\n    render() {\r\n        let fullScreenStyle, loader, cardHeaderRight, cardHeader;\r\n        let card = '';\r\n        let cardClass = [];\r\n\r\n        if (this.state.isOption) {\r\n            cardHeaderRight = (\r\n                <div className=\"card-header-right\">\r\n                    <Dropdown alignRight={true} className=\"btn-group card-option\">\r\n                        <Dropdown.Toggle id=\"dropdown-basic\" className=\"btn-icon\">\r\n                            <i className=\"feather icon-more-horizontal\"/>\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu as='ul' className=\"list-unstyled card-option\">\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {fullCard: !prevState.fullCard}})}}>\r\n                                <i className={this.state.fullCard ? 'feather icon-minimize' : 'feather icon-maximize'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.fullCard ? 'Restore' : 'Maximize'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={() => {this.setState(prevState => {return {collapseCard: !prevState.collapseCard}})}}>\r\n                                <i className={this.state.collapseCard ? 'feather icon-plus' : 'feather icon-minus'}/>\r\n                                <a href={DEMO.BLANK_LINK}> {this.state.collapseCard ? 'Expand' : 'Collapse'} </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardReloadHandler}>\r\n                                <i className='feather icon-refresh-cw'/>\r\n                                <a href={DEMO.BLANK_LINK}> Reload </a>\r\n                            </Dropdown.Item>\r\n                            <Dropdown.Item as='li' className=\"dropdown-item\" onClick={this.cardRemoveHandler}>\r\n                                <i className='feather icon-trash'/>\r\n                                <a href={DEMO.BLANK_LINK}> Remove </a>\r\n                            </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        cardHeader = (\r\n            <Card.Header>\r\n                <Card.Title as='h5'>{this.props.title}</Card.Title>\r\n                {cardHeaderRight}\r\n            </Card.Header>\r\n        );\r\n\r\n        if (this.state.fullCard) {\r\n            cardClass = [...cardClass, 'full-card'];\r\n            fullScreenStyle = {position: 'fixed', top: 0, left: 0, right: 0, width: this.props.windowWidth, height: this.props.windowHeight};\r\n        }\r\n\r\n        if (this.state.loadCard) {\r\n            cardClass = [...cardClass, 'card-load'];\r\n            loader = (\r\n                <div className=\"card-loader\">\r\n                    <i className=\"pct-loader1 anim-rotate\"/>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (this.state.cardRemove) {\r\n            cardClass = [...cardClass, 'd-none'];\r\n        }\r\n\r\n        if (this.props.cardClass) {\r\n            cardClass = [...cardClass, this.props.cardClass];\r\n        }\r\n\r\n        card = (\r\n            <Card className={cardClass.join(' ')} style={fullScreenStyle}>\r\n                {cardHeader}\r\n                <Collapse in={!this.state.collapseCard}>\r\n                    <div>\r\n                        <Card.Body>\r\n                            {this.props.children}\r\n                        </Card.Body>\r\n                    </div>\r\n                </Collapse>\r\n                {loader}\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Aux>\r\n                {card}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default windowSize(MainCard);\r\n"],"sourceRoot":""}